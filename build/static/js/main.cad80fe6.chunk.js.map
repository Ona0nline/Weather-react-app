{"version":3,"sources":["SearchEngine.js","App.js","reportWebVitals.js","index.js"],"names":["SearchEngine","city","setCity","useState","temperature","setTemperature","description","setDescription","Humidity","setHumidity","Wind","setWind","newCity","response","data","main","temp","weather","humidity","wind","speed","React","createElement","onSubmit","event","url","axios","get","then","preventDefault","onChange","target","value","type","placeholder","App","className","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iPAGe,SAASA,IACtB,IAAKC,EAAMC,GAAWC,mBAAS,SAC1BC,EAAaC,GAAkBF,mBAAS,OACxCG,EAAaC,GAAkBJ,mBAAS,KACxCK,EAAUC,GAAeN,mBAAS,OAClCO,EAAMC,GAAWR,mBAAS,MAO/B,SAASS,EAAQC,GACfR,EAAeQ,EAASC,KAAKC,KAAKC,MAClCT,EAAeM,EAASC,KAAKG,QAAQ,GAAGX,aACxCG,EAAYI,EAASC,KAAKC,KAAKG,UAC/BP,EAAQE,EAASC,KAAKK,KAAKC,OAS7B,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,QAAMC,SARV,SAAmBC,GACjB,IAAIC,EAAM,qDAAqDxB,wDAC/DyB,IAAMC,IAAIF,GAAKG,KAAKhB,GACpBY,EAAMK,mBAMFR,IAAAC,cAAA,SACEQ,SAtBR,SAAoBN,GAElBtB,EAAQsB,EAAMO,OAAOC,QAqBfC,KAAK,SACLC,YAAY,mBAGdb,IAAAC,cAAA,SAAOW,KAAK,SAASD,MAAM,YACrB,IACRX,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,gBAAclB,GAClBiB,IAAAC,cAAA,UAAI,gBAAchB,GAClBe,IAAAC,cAAA,UAAI,aAAWd,GACfa,IAAAC,cAAA,UAAI,SAAOZ,KCxCJ,SAASyB,IACtB,OACEd,IAAAC,cAAA,OAAKc,UAAU,OACbf,IAAAC,cAAA,UAAI,8BACJD,IAAAC,cAACtB,EAAY,OCKJqC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,KAAKY,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7B,IAAAC,cAACD,IAAM8B,WAAU,KACf9B,IAAAC,cAACa,EAAG,QAORE,M","file":"static/js/main.cad80fe6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function SearchEngine() {\r\n  let [city, setCity] = useState(\"null\");\r\n  let [temperature, setTemperature] = useState(null);\r\n  let [description, setDescription] = useState(\"\");\r\n  let [Humidity, setHumidity] = useState(null);\r\n  let [Wind, setWind] = useState(null);\r\n\r\n  function CityChange(event) {\r\n    // console.log(response.data);\r\n    setCity(event.target.value);\r\n  }\r\n\r\n  function newCity(response) {\r\n    setTemperature(response.data.main.temp);\r\n    setDescription(response.data.weather[0].description);\r\n    setHumidity(response.data.main.humidity);\r\n    setWind(response.data.wind.speed);\r\n  }\r\n\r\n  function Submitted(event) {\r\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=7784a4cd4aa2e0c25ead7bd96d585b8a&units=metric`;\r\n    axios.get(url).then(newCity);\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={Submitted}>\r\n        <input\r\n          onChange={CityChange}\r\n          type=\"search\"\r\n          placeholder=\"Enter a city..\"\r\n        />\r\n\r\n        <input type=\"submit\" value=\"Search\" />\r\n      </form>{\" \"}\r\n      <ul>\r\n        <li>Temperature: {temperature}</li>\r\n        <li>Description: {description}</li>\r\n        <li>Humidity: {Humidity}</li>\r\n        <li>Wind: {Wind}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\"\nimport SearchEngine from \"./SearchEngine\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Ajax working search engine</h1>\n      <SearchEngine />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}